name: Build and Deploy to ECS

on:
  push:
    branches: [ devops-di ]
permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    environment: di
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
      ECS_SERVICE: ${{ vars.ECS_SERVICE }}
      AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug GitHub OIDC Claims
        run: |
          echo "ðŸ”¹ Event name: $GITHUB_EVENT_NAME"
          echo "ðŸ”¹ Ref: $GITHUB_REF"
          echo "ðŸ”¹ Ref name: $GITHUB_REF_NAME"
          echo "ðŸ”¹ Head ref: $GITHUB_HEAD_REF"
          echo "ðŸ”¹ Base ref: $GITHUB_BASE_REF"
          echo "ðŸ”¹ Repository: $GITHUB_REPOSITORY"
          echo "ðŸ”¹ Actor: $GITHUB_ACTOR"
          echo "ðŸ”¹ Workflow: $GITHUB_WORKFLOW"
          echo "ðŸ”¹ SHA: $GITHUB_SHA"
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GITHUB_SHA: ${{ github.sha }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: deploy-${{ github.head_ref }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build, tag, and push image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/MeetlyOmni.Api/Dockerfile
          push: true
          tags: |
            ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ env.ECR_REPOSITORY }}:latest

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.8.0
        with:
          task-definition: ecs-task-definition.json
          container-name: meetlyomni-api
          image: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2.3.4
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
